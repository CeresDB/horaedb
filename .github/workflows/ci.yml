# Copyright 2022 CeresDB Project Authors. Licensed under Apache-2.0.

name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'etc/**'
      - '.github/**'
      - '**.md'
      - '**.yml'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'etc/**'
      - '.github/**'
      - '**.md'
      - '**.yml'

# Common environment variables
env:
  RUSTFLAGS: "-C debuginfo=1"
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: fmt-clippy
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        rust: [nightly-2022-08-08]
    steps:
      - uses: actions/checkout@v3
        # with:
        #   submodules: true
      - run: |
          rustup set auto-self-update disable
          rustup toolchain install ${{ matrix.rust }} --profile minimal
      - name: Cache Rust Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ./target
          key: rust-debug-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            rust-debug-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-
            rust-debug-${{ runner.os }}-
            rust-
      - name: Setup Build Environment
        run: |
          sudo apt update
          sudo apt install --yes gcc g++ libssl-dev pkg-config cmake
          sudo rm -rf /var/lib/apt/lists/*
      - name: Install clippy rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt
      - name: Run
        run: |
          make clippy
          make fmt

  linux-test:
    name: unit-test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        rust: [nightly-2022-08-08]
    steps:
      - uses: actions/checkout@v3
        # with:
        #   submodule: true
      - run: |
          rustup set auto-self-update disable
          rustup toolchain install ${{ matrix.rust }} --profile minimal
      - name: Cache Rust Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ./target
          key: rust-debug-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            rust-debug-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-
            rust-debug-${{ runner.os }}-
            rust-
      - name: Setup Build Environment
        run: |
          sudo apt update
          sudo apt install --yes gcc g++ libssl-dev pkg-config cmake git
      - name: Run Tests
        run: |
          git clone https://github.com/apache/parquet-testing.git components/parquet-testing
          make test-ut
        env:
          RUST_BACKTRACE: "1"
