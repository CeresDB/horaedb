# Copyright 2022 CeresDB Project Authors. Licensed under Apache-2.0.

name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'etc/**'
      - '.github/**'
      - '**.md'
      - '**.yml'
      - '.dockerignore'
      - 'docker/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'etc/**'
      - '.github/**'
      - '**.md'
      - '**.yml'
      - '.dockerignore'
      - 'docker/**'

# Common environment variables
env:
  RUSTFLAGS: "-C debuginfo=1"
  CARGO_TERM_COLOR: always

jobs:
  linux-ci:
    name: linux-ci
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        rust: [nightly-2022-08-08]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: |
          rustup set auto-self-update disable
          rustup toolchain install ${{ matrix.rust }} --profile minimal
      - name: Release Disk Quota
        run: |
          sudo rm -rf /usr/local/lib/android # release about 10 GB
          sudo rm -rf /usr/share/dotnet # release about 20GB
      - name: Cache Rust Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ./target
          key: debug-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            debug-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-
            debug-${{ runner.os }}-
            debug-${{ runner.os }}
      - name: Ensure Disk Quota
        run: |
          make ensure-disk-quota
      - name: Setup Build Environment
        run: |
          sudo apt update
          sudo apt install --yes protobuf-compiler
      - name: Install clippy rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt
      - name: Run Style Check
        run: |
          make check-license
          make clippy
          make fmt
      - name: Run Unit Tests
        run: |
          cp ${LOCK_FILE} ${LOCK_FILE}.bak
          make test-ut
          echo "Checking if ${LOCK_FILE} has changed..."
          diff ${LOCK_FILE} ${LOCK_FILE}.bak
        env:
          RUST_BACKTRACE: "1"
          LOCK_FILE: Cargo.lock
      - name: Run Harness
        run: |
          cd tests
          make run
        env:
          RUST_BACKTRACE: "1"
      - name: Report Disk Usage
        if: always()
        run: |
          du -sh ./target
          df -h
