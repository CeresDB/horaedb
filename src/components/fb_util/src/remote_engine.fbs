/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

namespace FBProtocol;

enum DataType : ubyte
{
    NULL = 0,
    TIMESTAMP = 1,
    DOUBLE = 2,
    VARBINARY = 3,
    STRING = 4,
    UINT64 = 5,
    FLOAT = 6,
    INT64 = 7,
    INT32 = 8,
    INT16 = 9,
    INT8 = 10,
    UINT32 = 11,
    UINT16 = 12,
    UINT8 = 13,
    BOOL = 14,
    DATE = 15,
    TIME = 16
}

table TableIdentifier {
  catalog: string;
  schema: string;
  table: string;
}

table EncodedRow {
    bytes: [ubyte];
}

struct ColumnDesc {
    id: uint;
    typ: DataType;
}

table ContiguousRows {
    schema_version: uint;
    encoded_rows: [EncodedRow];
    column_descs: [ColumnDesc];
}

table RowGroup {
  min_timestamp: long;
  max_timestamp: long;
  contiguous: ContiguousRows;
}

table WriteRequest {
  table: TableIdentifier;
  row_group: RowGroup;
}

table ResponseHeader {
  code: uint;
  error: string;
}

table WriteResponse {
  header: ResponseHeader;
  affected_rows: ulong;
}

table WriteBatchRequest {
  batch: [WriteRequest];
}
 
root_type WriteBatchRequest;