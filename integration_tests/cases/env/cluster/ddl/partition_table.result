DROP TABLE IF EXISTS `partition_table_t`;

affected_rows: 0

CREATE TABLE `partition_table_t`(
                                    `name`string TAG,
                                    `id` int TAG,
                                    `value` double NOT NULL,
                                    `t` timestamp NOT NULL,
                                    TIMESTAMP KEY(t)
) PARTITION BY KEY(name) PARTITIONS 4 ENGINE = Analytic with (enable_ttl='false');

affected_rows: 0

SHOW CREATE TABLE partition_table_t;

Table,Create Table,
String("partition_table_t"),String("CREATE TABLE `partition_table_t` (`tsid` uint64 NOT NULL, `t` timestamp NOT NULL, `name` string TAG, `id` int TAG, `value` double NOT NULL, PRIMARY KEY(tsid,t), TIMESTAMP KEY(t)) PARTITION BY KEY(name) PARTITIONS 4 ENGINE=Analytic WITH(arena_block_size='2097152', compaction_strategy='default', compression='ZSTD', enable_ttl='false', memtable_type='skiplist', num_rows_per_row_group='8192', segment_duration='', storage_format='AUTO', ttl='7d', update_mode='OVERWRITE', write_buffer_size='33554432')"),


INSERT INTO partition_table_t (t, name, value)
VALUES (1651737067000, "horaedb0", 100),
       (1651737067000, "horaedb1", 101),
       (1651737067000, "horaedb2", 102),
       (1651737067000, "horaedb3", 103),
       (1651737067000, "horaedb4", 104),
       (1651737067000, "horaedb5", 105),
       (1651737067000, "horaedb6", 106),
       (1651737067000, "horaedb7", 107),
       (1651737067000, "horaedb8", 108),
       (1651737067000, "horaedb9", 109),
       (1651737067000, "horaedb10", 110);

affected_rows: 11

SELECT * from partition_table_t where name = "horaedb0";

tsid,t,name,id,value,
UInt64(14003629709952370168),Timestamp(1651737067000),String("horaedb0"),Int32(0),Double(100.0),


SELECT * from partition_table_t where name = "horaedb1";

tsid,t,name,id,value,
UInt64(16657478399506126519),Timestamp(1651737067000),String("horaedb1"),Int32(0),Double(101.0),


SELECT * from partition_table_t where name = "horaedb2";

tsid,t,name,id,value,
UInt64(13157642818866239218),Timestamp(1651737067000),String("horaedb2"),Int32(0),Double(102.0),


SELECT * from partition_table_t where name = "horaedb3";

tsid,t,name,id,value,
UInt64(17269220762189063056),Timestamp(1651737067000),String("horaedb3"),Int32(0),Double(103.0),


SELECT * from partition_table_t where name in ("horaedb0", "horaedb1", "horaedb2", "horaedb3", "horaedb4") order by name;

tsid,t,name,id,value,
UInt64(14003629709952370168),Timestamp(1651737067000),String("horaedb0"),Int32(0),Double(100.0),
UInt64(16657478399506126519),Timestamp(1651737067000),String("horaedb1"),Int32(0),Double(101.0),
UInt64(13157642818866239218),Timestamp(1651737067000),String("horaedb2"),Int32(0),Double(102.0),
UInt64(17269220762189063056),Timestamp(1651737067000),String("horaedb3"),Int32(0),Double(103.0),
UInt64(7518868672723248583),Timestamp(1651737067000),String("horaedb4"),Int32(0),Double(104.0),


SELECT * from partition_table_t where name in ("horaedb5", "horaedb6", "horaedb7","horaedb8", "horaedb9", "horaedb10") order by name;

tsid,t,name,id,value,
UInt64(8750817885369790753),Timestamp(1651737067000),String("horaedb10"),Int32(0),Double(110.0),
UInt64(11618546385801067358),Timestamp(1651737067000),String("horaedb5"),Int32(0),Double(105.0),
UInt64(14251454593639082376),Timestamp(1651737067000),String("horaedb6"),Int32(0),Double(106.0),
UInt64(5459144247315085218),Timestamp(1651737067000),String("horaedb7"),Int32(0),Double(107.0),
UInt64(18050575420545011296),Timestamp(1651737067000),String("horaedb8"),Int32(0),Double(108.0),
UInt64(16367588166920223437),Timestamp(1651737067000),String("horaedb9"),Int32(0),Double(109.0),


ALTER TABLE partition_table_t ADD COLUMN (b string);

affected_rows: 0

INSERT INTO partition_table_t (t, id, name, value) VALUES (1651737067000, 10, "horaedb0", 100);

Failed to execute query, err: Server(ServerError { code: 500, msg: "Failed to execute plan. Caused by: Internal error, msg:Failed to execute interpreter, err:Failed to execute insert, err:Failed to write table, err:Failed to write tables in batch, tables:[\"__partition_table_t_1\"], err:Failed to query from table in server, table_idents:[TableIdentifier { catalog: \"horaedb\", schema: \"public\", table: \"__partition_table_t_1\" }], code:401, msg:failed to decode row group payload. Caused by: Schema mismatch with the write request, msg:expect 6 columns, but got 5. sql:INSERT INTO partition_table_t (t, id, name, value) VALUES (1651737067000, 10, \"horaedb0\", 100);" })

ALTER TABLE partition_table_t MODIFY SETTING enable_ttl='true';

affected_rows: 0

SHOW CREATE TABLE __partition_table_t_0;

Table,Create Table,
String("__partition_table_t_0"),String("CREATE TABLE `__partition_table_t_0` (`tsid` uint64 NOT NULL, `t` timestamp NOT NULL, `name` string TAG, `id` int TAG, `value` double NOT NULL, `b` string, PRIMARY KEY(tsid,t), TIMESTAMP KEY(t)) ENGINE=Analytic WITH(arena_block_size='2097152', compaction_strategy='default', compression='ZSTD', enable_ttl='true', memtable_type='skiplist', num_rows_per_row_group='8192', segment_duration='2h', storage_format='AUTO', ttl='7d', update_mode='OVERWRITE', write_buffer_size='33554432')"),


SHOW CREATE TABLE __partition_table_t_1;

Table,Create Table,
String("__partition_table_t_1"),String("CREATE TABLE `__partition_table_t_1` (`tsid` uint64 NOT NULL, `t` timestamp NOT NULL, `name` string TAG, `id` int TAG, `value` double NOT NULL, `b` string, PRIMARY KEY(tsid,t), TIMESTAMP KEY(t)) ENGINE=Analytic WITH(arena_block_size='2097152', compaction_strategy='default', compression='ZSTD', enable_ttl='true', memtable_type='skiplist', num_rows_per_row_group='8192', segment_duration='2h', storage_format='AUTO', ttl='7d', update_mode='OVERWRITE', write_buffer_size='33554432')"),


SHOW CREATE TABLE __partition_table_t_2;

Table,Create Table,
String("__partition_table_t_2"),String("CREATE TABLE `__partition_table_t_2` (`tsid` uint64 NOT NULL, `t` timestamp NOT NULL, `name` string TAG, `id` int TAG, `value` double NOT NULL, `b` string, PRIMARY KEY(tsid,t), TIMESTAMP KEY(t)) ENGINE=Analytic WITH(arena_block_size='2097152', compaction_strategy='default', compression='ZSTD', enable_ttl='true', memtable_type='skiplist', num_rows_per_row_group='8192', segment_duration='2h', storage_format='AUTO', ttl='7d', update_mode='OVERWRITE', write_buffer_size='33554432')"),


SHOW CREATE TABLE __partition_table_t_3;

Table,Create Table,
String("__partition_table_t_3"),String("CREATE TABLE `__partition_table_t_3` (`tsid` uint64 NOT NULL, `t` timestamp NOT NULL, `name` string TAG, `id` int TAG, `value` double NOT NULL, `b` string, PRIMARY KEY(tsid,t), TIMESTAMP KEY(t)) ENGINE=Analytic WITH(arena_block_size='2097152', compaction_strategy='default', compression='ZSTD', enable_ttl='true', memtable_type='skiplist', num_rows_per_row_group='8192', segment_duration='2h', storage_format='AUTO', ttl='7d', update_mode='OVERWRITE', write_buffer_size='33554432')"),


DROP TABLE IF EXISTS `partition_table_t`;

affected_rows: 0

SHOW CREATE TABLE partition_table_t;

Failed to execute query, err: Server(ServerError { code: 500, msg: "Failed to create plan. Caused by: Failed to create plan, err:Table not found, table:partition_table_t sql:SHOW CREATE TABLE partition_table_t;" })

DROP TABLE IF EXISTS `random_partition_table_t`;

affected_rows: 0

CREATE TABLE `random_partition_table_t`(
                                    `name`string TAG,
                                    `id` int TAG,
                                    `value` double NOT NULL,
                                    `t` timestamp NOT NULL,
                                    TIMESTAMP KEY(t)
) PARTITION BY RANDOM PARTITIONS 4 ENGINE = Analytic with (enable_ttl='false', update_mode="APPEND");

affected_rows: 0

SHOW CREATE TABLE random_partition_table_t;

Table,Create Table,
String("random_partition_table_t"),String("CREATE TABLE `random_partition_table_t` (`tsid` uint64 NOT NULL, `t` timestamp NOT NULL, `name` string TAG, `id` int TAG, `value` double NOT NULL, PRIMARY KEY(tsid,t), TIMESTAMP KEY(t)) PARTITION BY RANDOM PARTITIONS 4 ENGINE=Analytic WITH(arena_block_size='2097152', compaction_strategy='default', compression='ZSTD', enable_ttl='false', memtable_type='skiplist', num_rows_per_row_group='8192', segment_duration='', storage_format='AUTO', ttl='7d', update_mode='APPEND', write_buffer_size='33554432')"),


INSERT INTO random_partition_table_t (t, name, value)
VALUES (1651737067000, "horaedb0", 100),
       (1651737067000, "horaedb1", 101),
       (1651737067000, "horaedb2", 102),
       (1651737067000, "horaedb3", 103),
       (1651737067000, "horaedb4", 104),
       (1651737067000, "horaedb5", 105),
       (1651737067000, "horaedb6", 106),
       (1651737067000, "horaedb7", 107),
       (1651737067000, "horaedb8", 108),
       (1651737067000, "horaedb9", 109),
       (1651737067000, "horaedb10", 110);

affected_rows: 11

SELECT * from random_partition_table_t where name = "horaedb0";

tsid,t,name,id,value,
UInt64(14003629709952370168),Timestamp(1651737067000),String("horaedb0"),Int32(0),Double(100.0),


SELECT * from random_partition_table_t where name = "horaedb5";

tsid,t,name,id,value,
UInt64(11618546385801067358),Timestamp(1651737067000),String("horaedb5"),Int32(0),Double(105.0),


DROP TABLE IF EXISTS `random_partition_table_t`;

affected_rows: 0

SHOW CREATE TABLE random_partition_table_t;

Failed to execute query, err: Server(ServerError { code: 500, msg: "Failed to create plan. Caused by: Failed to create plan, err:Table not found, table:random_partition_table_t sql:SHOW CREATE TABLE random_partition_table_t;" })

DROP TABLE IF EXISTS `random_partition_table_t_overwrite`;

affected_rows: 0

CREATE TABLE `random_partition_table_t_overwrite`(
                                    `name`string TAG,
                                    `id` int TAG,
                                    `value` double NOT NULL,
                                    `t` timestamp NOT NULL,
                                    TIMESTAMP KEY(t)
) PARTITION BY RANDOM PARTITIONS 4 ENGINE = Analytic with (enable_ttl='false', update_mode="OVERWRITE");

Failed to execute query, err: Server(ServerError { code: 500, msg: "Failed to execute plan. Caused by: Internal error, msg:Failed to execute interpreter, err:Failed to execute create table, err:Failed to create table by table manipulator, err:Failed to create table, msg:invalid parameters to create table, plan:CreateTablePlan { engine: \"Analytic\", if_not_exists: false, table: \"random_partition_table_t_overwrite\", table_schema: Schema { timestamp_index: 1, tsid_index: Some(0), column_schemas: ColumnSchemas { columns: [ColumnSchema { id: 1, name: \"tsid\", data_type: UInt64, is_nullable: false, is_tag: false, is_dictionary: false, comment: \"\", escaped_name: \"tsid\", default_value: None }, ColumnSchema { id: 2, name: \"t\", data_type: Timestamp, is_nullable: false, is_tag: false, is_dictionary: false, comment: \"\", escaped_name: \"t\", default_value: None }, ColumnSchema { id: 3, name: \"name\", data_type: String, is_nullable: true, is_tag: true, is_dictionary: false, comment: \"\", escaped_name: \"name\", default_value: None }, ColumnSchema { id: 4, name: \"id\", data_type: Int32, is_nullable: true, is_tag: true, is_dictionary: false, comment: \"\", escaped_name: \"id\", default_value: None }, ColumnSchema { id: 5, name: \"value\", data_type: Double, is_nullable: false, is_tag: false, is_dictionary: false, comment: \"\", escaped_name: \"value\", default_value: None }] }, version: 1, primary_key_indexes: [0, 1] }, options: {\"enable_ttl\": \"false\", \"update_mode\": \"OVERWRITE\"} }, err:Invalid arguments, table:random_partition_table_t_overwrite, err:Try to create a random partition table in overwrite mode, table:random_partition_table_t_overwrite. sql:CREATE TABLE `random_partition_table_t_overwrite`(\n                                    `name`string TAG,\n                                    `id` int TAG,\n                                    `value` double NOT NULL,\n                                    `t` timestamp NOT NULL,\n                                    TIMESTAMP KEY(t)\n) PARTITION BY RANDOM PARTITIONS 4 ENGINE = Analytic with (enable_ttl='false', update_mode=\"OVERWRITE\");" })

