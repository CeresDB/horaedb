DROP TABLE IF EXISTS `03_dml_insert_mode_table1`;

affected_rows: 0

CREATE TABLE `03_dml_insert_mode_table1` (
    `timestamp` timestamp NOT NULL,
    `value` double,
    `dic` string dictionary,
    timestamp KEY (timestamp)) ENGINE=Analytic
WITH(
	 enable_ttl='false',
	 update_mode='OVERWRITE'
);

affected_rows: 0

INSERT INTO `03_dml_insert_mode_table1` (`timestamp`, `value`, `dic`)
    VALUES (1, +10, "d1"), (2, 0, "d2"), (3, -30, "d1");

affected_rows: 3

SELECT
    *
FROM
    `03_dml_insert_mode_table1`
ORDER BY
    `value` ASC;

Failed to execute query, err: BuildRows("Unsupported arrow type:Dictionary(Int32, Utf8)")

INSERT INTO `03_dml_insert_mode_table1` (`timestamp`, `value`)
    VALUES (1, 100), (2, 200), (3, 300);

affected_rows: 3

SELECT
    *
FROM
    `03_dml_insert_mode_table1`
ORDER BY
    `value` ASC;

Failed to execute query, err: BuildRows("Unsupported arrow type:Dictionary(Int32, Utf8)")

DROP TABLE `03_dml_insert_mode_table1`;

affected_rows: 0

DROP TABLE IF EXISTS `03_dml_insert_mode_table2`;

affected_rows: 0

CREATE TABLE `03_dml_insert_mode_table2` (
    `timestamp` timestamp NOT NULL,
    `value` double,
    `dic` string dictionary,
    timestamp KEY (timestamp)) ENGINE=Analytic
WITH(
	 enable_ttl='false',
	 update_mode='APPEND'
);

affected_rows: 0

INSERT INTO `03_dml_insert_mode_table2` (`timestamp`, `value`, `dic`)
    VALUES (1, 10, "d1"), (2, 20, Null), (3, "d2");

Failed to execute query, err: Server(ServerError { code: 500, msg: "Failed to create plan, query: INSERT INTO `03_dml_insert_mode_table2` (`timestamp`, `value`, `dic`) \n     VALUES (1, 10, \"d1\"), (2, 20, Null), (3, \"d2\");. Caused by: Failed to create plan, err:Insert Failed to convert value, err:Invalid insert value, kind:string, value:Null." })

SELECT
    *
FROM
    `03_dml_insert_mode_table2`
ORDER BY
    `value` ASC;

affected_rows: 0

INSERT INTO `03_dml_insert_mode_table2` (`timestamp`, `value`, `dic`)
    VALUES (1, 100, "d2"), (2, 200, "d1"), (3, 300, Null);

Failed to execute query, err: Server(ServerError { code: 500, msg: "Failed to create plan, query: INSERT INTO `03_dml_insert_mode_table2` (`timestamp`, `value`, `dic`) \n     VALUES (1, 100, \"d2\"), (2, 200, \"d1\"), (3, 300, Null);. Caused by: Failed to create plan, err:Insert Failed to convert value, err:Invalid insert value, kind:string, value:Null." })

SELECT
    *
FROM
    `03_dml_insert_mode_table2`
ORDER BY
    `value` ASC;

affected_rows: 0

DROP TABLE `03_dml_insert_mode_table2`;

affected_rows: 0

DROP TABLE IF EXISTS `03_dml_insert_mode_table3`;

affected_rows: 0

CREATE TABLE `03_dml_insert_mode_table3` (
    `timestamp` timestamp NOT NULL,
    `value` double,
    `dic` string dictionary,
    timestamp KEY (timestamp)) ENGINE=Analytic
WITH(
	 enable_ttl='false'
);

affected_rows: 0

INSERT INTO `03_dml_insert_mode_table3` (`timestamp`, `value`, `dic`)
    VALUES (1, 100, "d2"), (2, 200, "d1"), (3, 300, "d1");

affected_rows: 3

    -- VALUES (1, 100, "d2"), (2, 200, "d1"), (3, 300, Null);

Failed to execute query, err: Rpc(Status { code: Unknown, message: "transport error", source: Some(tonic::transport::Error(Transport, hyper::Error(Io, Custom { kind: BrokenPipe, error: "stream closed because of a broken pipe" }))) })

SELECT
    *
FROM
    `03_dml_insert_mode_table3`
ORDER BY
    `value` ASC;

Failed to execute query, err: Rpc(Status { code: Unavailable, message: "error trying to connect: tcp connect error: Connection refused (os error 61)", source: Some(tonic::transport::Error(Transport, hyper::Error(Connect, ConnectError("tcp connect error", Os { code: 61, kind: ConnectionRefused, message: "Connection refused" })))) })

INSERT INTO `03_dml_insert_mode_table3` (`timestamp`, `value`)
    VALUES (1, 100, "d5"), (2, 200, "d6"), (3, 300, "d7");

Failed to execute query, err: Rpc(Status { code: Unavailable, message: "error trying to connect: tcp connect error: Connection refused (os error 61)", source: Some(tonic::transport::Error(Transport, hyper::Error(Connect, ConnectError("tcp connect error", Os { code: 61, kind: ConnectionRefused, message: "Connection refused" })))) })

SELECT
    *
FROM
    `03_dml_insert_mode_table3`
ORDER BY
    `value` ASC;

Failed to execute query, err: Rpc(Status { code: Unavailable, message: "error trying to connect: tcp connect error: Connection refused (os error 61)", source: Some(tonic::transport::Error(Transport, hyper::Error(Connect, ConnectError("tcp connect error", Os { code: 61, kind: ConnectionRefused, message: "Connection refused" })))) })

DROP TABLE `03_dml_insert_mode_table3`;

Failed to execute query, err: Rpc(Status { code: Unavailable, message: "error trying to connect: tcp connect error: Connection refused (os error 61)", source: Some(tonic::transport::Error(Transport, hyper::Error(Connect, ConnectError("tcp connect error", Os { code: 61, kind: ConnectionRefused, message: "Connection refused" })))) })

DROP TABLE IF EXISTS `03_dml_insert_mode_table4`;

Failed to execute query, err: Rpc(Status { code: Unavailable, message: "error trying to connect: tcp connect error: Connection refused (os error 61)", source: Some(tonic::transport::Error(Transport, hyper::Error(Connect, ConnectError("tcp connect error", Os { code: 61, kind: ConnectionRefused, message: "Connection refused" })))) })

CREATE TABLE `03_dml_insert_mode_table4` (
    `timestamp` timestamp NOT NULL,
    `c1` uint32,
    `c2` string default '123',
    `c3` uint32 default c1 + 1,
    `c4` uint32 default c3 + 1,
    `c5` uint32 default c3 + 10,
    `c6` string default "default",
    timestamp KEY (timestamp)) ENGINE=Analytic
WITH(
	 enable_ttl='false'
);

Failed to execute query, err: Rpc(Status { code: Unavailable, message: "error trying to connect: tcp connect error: Connection refused (os error 61)", source: Some(tonic::transport::Error(Transport, hyper::Error(Connect, ConnectError("tcp connect error", Os { code: 61, kind: ConnectionRefused, message: "Connection refused" })))) })

INSERT INTO `03_dml_insert_mode_table4` (`timestamp`, `c1`, `c5`)
    VALUES (1, 10, 3), (2, 20, 4), (3, 30, 5);

Failed to execute query, err: Rpc(Status { code: Unavailable, message: "error trying to connect: tcp connect error: Connection refused (os error 61)", source: Some(tonic::transport::Error(Transport, hyper::Error(Connect, ConnectError("tcp connect error", Os { code: 61, kind: ConnectionRefused, message: "Connection refused" })))) })

SELECT
    *
FROM
    `03_dml_insert_mode_table4`
ORDER BY
    `c1` ASC;

Failed to execute query, err: Rpc(Status { code: Unavailable, message: "error trying to connect: tcp connect error: Connection refused (os error 61)", source: Some(tonic::transport::Error(Transport, hyper::Error(Connect, ConnectError("tcp connect error", Os { code: 61, kind: ConnectionRefused, message: "Connection refused" })))) })

DROP TABLE IF EXISTS `03_dml_insert_mode_table4`;

Failed to execute query, err: Rpc(Status { code: Unavailable, message: "error trying to connect: tcp connect error: Connection refused (os error 61)", source: Some(tonic::transport::Error(Transport, hyper::Error(Connect, ConnectError("tcp connect error", Os { code: 61, kind: ConnectionRefused, message: "Connection refused" })))) })

